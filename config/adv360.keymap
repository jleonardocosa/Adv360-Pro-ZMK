
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/rgb.h>

/ {
  behaviors {
    #include "macros.dtsi"
    #include "version.dtsi"

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
  };

    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
 &kp EQUAL     &kp N1   &kp N2    &kp N3     &kp N4  &kp N5                  &kp SQT                                                               &kp BSLH  &kp N6  &kp N7     &kp N8    &kp N9          &kp N0        &kp MINUS
   &kp TAB      &kp Q    &kp W     &kp E      &kp R   &kp T               &kp LS(N8)                                                             &kp LS(N9)   &kp Y   &kp U      &kp I     &kp O           &kp P         &kp RBKT
  &kp CAPS      &kp A    &kp S     &kp D      &kp F   &kp G                   &tog 1  &kp LCTRL  &kp LALT                   &kp LGUI  &kp RCTRL       &mo 3   &kp H   &kp J      &kp K     &kp L        &kp SEMI  &kp NON_US_BSLH
 &kp LSHFT      &kp Z    &kp X     &kp C      &kp V   &kp B                                      &kp HOME                  &kp PG_UP                          &kp N   &kp M  &kp COMMA   &kp DOT        &kp FSLH        &kp RSHFT
     &mo 2  &kp GRAVE  &kp ESC  &kp LEFT  &kp RIGHT                    &kp BACKSPACE    &kp DEL   &kp END                  &kp PG_DN  &kp ENTER   &kp SPACE          &kp UP   &kp DOWN  &kp LBKT  &mt RALT K_APP            &mo 2
            >;
        };

        layer_keypad {
            bindings = <
 &kp EQUAL     &kp N1   &kp N2    &kp N3     &kp N4  &kp N5              &trans                                                                &trans     &kp N6  &kp KP_NUM  &kp LS(N0)  &kp KP_DIVIDE  &kp KP_MULTIPLY        &kp MINUS
   &kp TAB      &kp Q    &kp W     &kp E      &kp R   &kp T               &none                                                                 &none      &kp Y   &kp KP_N7   &kp KP_N8      &kp KP_N9     &kp KP_MINUS         &kp LBKT
 &kp GRAVE      &kp A    &kp S     &kp D      &kp F   &kp G              &tog 1  &kp LCTRL  &kp LALT                   &kp LGUI  &kp RCTRL      &mo 3      &kp H   &kp KP_N4   &kp KP_N5      &kp KP_N6      &kp KP_PLUS  &kp NON_US_BSLH
 &kp LSHFT      &kp Z    &kp X     &kp C      &kp V   &kp B                                 &kp HOME                  &kp PG_UP                        &kp SPACE   &kp KP_N1   &kp KP_N2      &kp KP_N3     &kp KP_ENTER        &kp RSHFT
     &mo 2  &kp GRAVE  &kp ESC  &kp LEFT  &kp RIGHT                    &kp BSPC    &kp DEL   &kp END                  &kp PG_DN  &kp ENTER  &kp KP_N0                 &kp UP    &kp DOWN     &kp KP_DOT        &kp SPACE            &mo 2
            >;
        };

        layer_fn {
            bindings = <
 &kp F1  &kp F2            &kp F3               &kp F4              &kp F5  &kp F6             &none                                                      &none         &kp F7         &kp F8        &kp F9        &kp F10     &kp F11     &kp F12
 &trans   &none  &kp LS(LG(LEFT))    &kp LS(LG(RIGHT))  &macro_ctl_alt_sup   &none             &none                                                  &kp PSCRN  &kp LS(EQUAL)     &kp LS(N1)     &kp EQUAL  &kp LS(MINUS)   &kp GRAVE   &kp RA(Q)
 &trans   &none     &macro_quotes       &macro_dquotes       &macro_braces   &none             &mo 1  &trans  &trans                  &trans  &trans      &mo 3     &kp LS(N7)  &kp RA(MINUS)     &kp MINUS   &kp RA(RBKT)  &kp LS(N3)  &kp LS(N4)
 &trans   &none     &macro_parens  &macro_less_greater     &macro_brackets   &none                            &trans                  &trans                     &kp LS(GRAVE)     &kp LS(N2)  &kp LS(LBKT)  &kp RA(GRAVE)  &kp LS(N5)  &kp LS(N6)
 &trans   &none             &none      &kp LC(LS(TAB))         &kp LC(TAB)                    &trans  &trans  &trans                  &trans  &trans     &trans                        &trans        &trans         &trans      &trans      &trans
            >;
        };

        layer_mod {
            bindings = <
 &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4            &bootloader                                                                          &bootloader       &none   &none   &none   &none   &none   &none
      &none         &none         &none         &none         &none         &none             &bl BL_INC                                                                                &none       &none   &none   &none   &none   &none   &none
      &none         &none         &none         &none         &none         &none             &bl BL_DEC  &rgb_ug RGB_MEFS_CMD 5   &none                    &kp C_MUTE     &none        &none       &none   &none   &none   &none   &none   &none
      &none         &none         &none         &none    &macro_ver    &sys_reset                                                  &none                  &kp C_VOL_UP                         &sys_reset   &none   &none   &none   &none   &none
      &none         &none         &none         &none         &none                           &bl BL_TOG         &rgb_ug RGB_TOG   &none                  &kp C_VOL_DN  &kp C_PP        &none               &none   &none   &none   &none   &none
            >;
        };

    };
};
